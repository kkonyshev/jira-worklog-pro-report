// Adding ScalaStyle support
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(
                [group: "org.github.ngbinh.scalastyle", name: "gradle-scalastyle-plugin_2.11", version: "0.7.2"]
        )
    }
}

apply plugin: 'scala'
apply plugin: 'scalaStyle'
apply plugin: 'project-report'
apply plugin: 'application'

// Scala and Akka versions
def scalaMajor = "2.11"
def scalaMinor = "8"
def akkaVersion = "2.4.11"
def playWsVersion = "2.0.1"
def configVersion = "1.3.2"
def slf4jversion = "1.7.26"

group 'worklog_pro.report'
mainClassName = "worklog_pro.report.WorkLogReport"

repositories {
    mavenCentral()
}

dependencies {
    compile "org.scala-lang:scala-compiler:$scalaMajor.$scalaMinor"
    compile "org.scala-lang:scala-library:$scalaMajor.$scalaMinor"
    compile "com.typesafe:config:$configVersion"
    compile "com.typesafe.akka:akka-actor_$scalaMajor:$akkaVersion"
    compile "com.typesafe.play:play-ahc-ws-standalone_$scalaMajor:$playWsVersion"
    compile "com.typesafe.play:play-ws-standalone-json_$scalaMajor:$playWsVersion"
    compile "org.slf4j:slf4j-simple:$slf4jversion"


    testCompile(
            [group: 'junit', name: 'junit', version: '4.12'],
            [group: 'org.specs2', name: "specs2-core_$scalaMajor", version: '3.8.5.1'],
            [group: 'org.specs2', name: "specs2-junit_$scalaMajor", version: '3.8.5.1'],
    )
}

// Specifying the main class for the 'application' plugin
jar {
    baseName = project.name
    manifest {
        attributes("Main-Class": mainClassName)
    }
}

// Workaround for Gradle 3.+ and IDEA (https://discuss.gradle.org/t/idea-integration-with-scala-plugin-broken-since-gradle-3-0-no-such-property-daemonserver/19159/2)
ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ["-unchecked", "-deprecation", "-feature", "-Xfatal-warnings", "-encoding", "utf8"]
}

// ScalaStyle config, by putting it to the project subdirectory, IDEA will automatically use it
scalaStyle {
    configLocation = "$rootDir/project/scalastyle_config.xml"
    includeTestSourceDirectory = true
    source = "src/main/scala"
    testSource = "src/test/scala"
}

// Run ScalaStyle with the tests
check {
    dependsOn "scalaStyle"
}

// specs2 console logging
test {
    testLogging.showStandardStreams = true
    systemProperty "specs2.commandline", "console"
}

// Generating gradle wrapper so people don't have to have the Gradle version preinstalled
task wrapper(type: Wrapper) {
    gradleVersion = "3.1"
}